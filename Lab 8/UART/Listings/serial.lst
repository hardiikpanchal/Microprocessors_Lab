C51 COMPILER V9.60.0.0   SERIAL                                                            03/18/2022 18:43:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\se
                    -rial.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          bit tx_complete = 0,rx_complete = 0; //Bit flags for interrupts
   4          
   5          /**********************************************************
   6            uart_init(): 
   7            Initialization function to be completed
   8            Initializes UART peripheral for 8-bit transfer, 
   9            1 start and 1 stop bits. 
  10            
  11            Please write TH1 value for required baud rate
  12          ***********************************************************/  
  13          void uart_init(void)
  14          {
  15   1        //TMOD=0x__;      //Configure Timer 1 in Mode 2
  16   1        TMOD = 0x20;
  17   1        //TH1=__;         //Load TH1 to obtain require Baudrate (Refer Serial.pdf for calculations)
  18   1        TH1 = 243;
  19   1        //SCON=0x__;      //Configure UART peripheral for 8-bit data transfer 
  20   1        SCON = 0x50;      //set REN and SM1
  21   1        //                //Start Timer 1
  22   1        TR1 = 1;
  23   1                          //Enable Serial Interrupt
  24   1        ES = 1;
  25   1                          //Enable Global Interrupt
  26   1        EA = 1;
  27   1      }
  28          
  29          
  30          /**********************************************************
  31            transmit_char(<unsigned char ch>): 
  32            Transmits a character using UART
  33          ***********************************************************/  
  34          void transmit_char(unsigned char ch)
  35          {
  36   1        SBUF=ch;        //Load data in SBUF
  37   1        while(!tx_complete);      //Wait for tx_complete flag (interrupt to complete)
  38   1        tx_complete = 0;    //Clear tx_complete flag 
  39   1      }
  40          
  41          
  42          /**********************************************************
  43            transmit_string(<String pointer>): 
  44            Transmit a string using UART
  45          ***********************************************************/  
  46          void transmit_string(unsigned char *s)
  47          {
  48   1        while(*s != 0)
  49   1        {
  50   2            transmit_char(*s++);
  51   2        }
  52   1      }
  53          
  54          
C51 COMPILER V9.60.0.0   SERIAL                                                            03/18/2022 18:43:05 PAGE 2   

  55          /**********************************************************
  56            receive_char(): 
  57            Receives a character through UART. Returns a 
  58            character.
  59          ***********************************************************/    
  60          unsigned char receive_char(void)
  61          {
  62   1        unsigned char ch = 0;
  63   1        while(!rx_complete);        //Wait for rx_complete(interrupt to complete)
  64   1        rx_complete = 0;
  65   1        ch = SBUF;          //Read data from SBUF
  66   1        return ch;          //Return read character
  67   1      }
  68          
  69          
  70          /**********************************************************
  71            Serial_ISR(): 
  72            Interrupt service routine for UART interrupt.
  73            Determines whether it is a transmit or receive
  74            interrupt and raise corresponding flag.
  75            Transmit or receive functions (defined above) monitor
  76            for these flags to check if data transfer is done.
  77          ***********************************************************/  
  78          void serial_ISR(void) interrupt 4
  79          {
  80   1          if(TI==1)     //check whether TI is set
  81   1          {
  82   2            TI = 0;     //Clear TI flag
  83   2            tx_complete = 1;  //Set tx_complete flag indicating interrupt completion
  84   2          }
  85   1          else if(RI==1)      //check whether RI is set
  86   1          {
  87   2            RI = 0;     //Clear RI flag
  88   2            rx_complete = 1;  //Set rx_complete flag indicating interrupt completion
  89   2          }
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
